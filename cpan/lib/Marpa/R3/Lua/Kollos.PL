# Marpa::R3 is Copyright (C) 2016, Jeffrey Kegler.
#
# This module is free software; you can redistribute it and/or modify it
# under the same terms as Perl 5.10.1. For more details, see the full text
# of the licenses in the directory LICENSES.
#
# This program is distributed in the hope that it will be
# useful, but it is provided “as is” and without any express
# or implied warranties. For details, see the full text of
# of the licenses in the directory LICENSES.

use 5.010001;
use warnings;
use strict;
use English qw( -no_match_vars );
use File::Spec;

# Given a string, return that same string quoted as
# a Lua "long string"
sub lua_quote {
    my ($lua_string) = @_;
    my $longest_bracket = 2;
    for my $long_bracket ($lua_string =~ m/\]=*\]/g)
    {
       my $this_length = length $long_bracket;
       # say STDERR "this_length", $this_length;
       $longest_bracket = $this_length if $this_length > $longest_bracket;
    }
    # less 2 for the square brackets, +1 to increment
    my $equals = '=' x ($longest_bracket - 1);
    my $open_bracket = '[' . $equals . '[';
    my $close_bracket = ']' . $equals . ']';
    return join "\n", $open_bracket, $lua_string, $close_bracket;
}

my $outfile_name = shift;
open my $out_fh, '>', $outfile_name;

my $header = <<'END_OF_HEADER';

# This file was autogenerated by $PROGRAM_NAME
# IF YOU EDIT THIS FILE, YOUR CHANGES WILL BE LOST
# This is not a source file.  For license information,
# consult the source files.

package Marpa::R3::Lua::Kollos;

use 5.010001;
use warnings;
use strict;

use vars qw($VERSION $STRING_VERSION);
$VERSION        = '4.001_029';
$STRING_VERSION = $VERSION;
$VERSION        = eval $VERSION;

$Marpa::R3::Lua::Kollos::load = <<'END_OF_LUA';
local do_load, error = load(
END_OF_HEADER

my $lua_file_name  = File::Spec->catfile(qw(kollos kollos.lua));
open my $in_fh, '<', $lua_file_name;
my $lua_file = do { local $RS = undef; <$in_fh>; };
close $in_fh;

my $trailer = <<'END_OF_TRAILER';

) -- closing paren for load()

if do_load then
    kollos = do_load()
    if kollos then return "OK" end
    return "Load of kollos failed"
else
    return "Compile of kollos failed", error
end
END_OF_LUA

1;

# vim: set expandtab shiftwidth=4:
END_OF_TRAILER

print {$out_fh} join "", $header, lua_quote($lua_file), $trailer;

# vim: set expandtab shiftwidth=4:
