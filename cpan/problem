(cd cpan; \
    /usr/bin/make; \
    /usr/bin/make test TEST_FILES='t/01-lua.t'; \
) 2>&1 | tee single_test.out
make[1]: Entering directory '/home/Ruslan/Marpa--R3/cpan'
make[2]: Entering directory '/home/Ruslan/Marpa--R3/cpan/engine'
"/usr/bin/perl.exe" -MExtUtils::Install -e 'install([ from_to => {@ARGV}, skip => q{cf/INSTALL.SKIP}, dir_mode => "755" ]);' -- read_only gnu_ac_build
echo hello from engine/Makefile.PL all target
hello from engine/Makefile.PL all target
make[2]: Leaving directory '/home/Ruslan/Marpa--R3/cpan/engine'
make[2]: Entering directory '/home/Ruslan/Marpa--R3/cpan/lua'
make[2]: Leaving directory '/home/Ruslan/Marpa--R3/cpan/lua'
make[2]: Entering directory '/home/Ruslan/Marpa--R3/cpan/xs'
Executing all target in xs directory
make[2]: Leaving directory '/home/Ruslan/Marpa--R3/cpan/xs'
Manifying 20 pod documents
make[1]: Leaving directory '/home/Ruslan/Marpa--R3/cpan'
make[1]: Entering directory '/home/Ruslan/Marpa--R3/cpan'
make[2]: Entering directory '/home/Ruslan/Marpa--R3/cpan/engine'
"/usr/bin/perl.exe" -MExtUtils::Install -e 'install([ from_to => {@ARGV}, skip => q{cf/INSTALL.SKIP}, dir_mode => "755" ]);' -- read_only gnu_ac_build
echo hello from engine/Makefile.PL all target
hello from engine/Makefile.PL all target
make[2]: Leaving directory '/home/Ruslan/Marpa--R3/cpan/engine'
make[2]: Entering directory '/home/Ruslan/Marpa--R3/cpan/lua'
make[2]: Leaving directory '/home/Ruslan/Marpa--R3/cpan/lua'
make[2]: Entering directory '/home/Ruslan/Marpa--R3/cpan/xs'
Executing all target in xs directory
make[2]: Leaving directory '/home/Ruslan/Marpa--R3/cpan/xs'
PERL_DL_NONLAZY=1 "/usr/bin/perl.exe" "-MExtUtils::Command::MM" "-MTest::Harness" "-e" "undef *Test::Harness::Switches; test_harness(0, 'blib/lib', 'blib/arch')" t/01-lua.t
Setting trace_values option
Registering semantics for rule: [:start] ::= statements
  Semantics are result_is_rhs_n 0
Registering semantics for rule: action ::= [Lex-33] [Lex-34] <action name>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20385eb0)" result_is_array
Registering semantics for rule: <action name> ::= <Perl name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abaee8)" result_is_array
Registering semantics for rule: <action name> ::= <array descriptor>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abaf00)" result_is_array
Registering semantics for rule: <action name> ::= <reserved action name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abaf90)" result_is_array
Registering semantics for rule: <adverb item> ::= action
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abb0b0)" result_is_array
Registering semantics for rule: <adverb item> ::= blessing
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abb1d0)" result_is_array
Registering semantics for rule: <adverb item> ::= <event specification>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abb2f0)" result_is_array
Registering semantics for rule: <adverb item> ::= <group association>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abb410)" result_is_array
Registering semantics for rule: <adverb item> ::= <left association>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abb530)" result_is_array
Registering semantics for rule: <adverb item> ::= naming
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abb650)" result_is_array
Registering semantics for rule: <adverb item> ::= <null adverb>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abcc38)" result_is_array
Registering semantics for rule: <adverb item> ::= <null ranking specification>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abcd58)" result_is_array
Registering semantics for rule: <adverb item> ::= <pause specification>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abce78)" result_is_array
Registering semantics for rule: <adverb item> ::= <priority specification>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abcf98)" result_is_array
Registering semantics for rule: <adverb item> ::= <proper specification>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abd0b8)" result_is_array
Registering semantics for rule: <adverb item> ::= <rank specification>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abd1d8)" result_is_array
Registering semantics for rule: <adverb item> ::= <right association>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abd2f8)" result_is_array
Registering semantics for rule: <adverb item> ::= <separator specification>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abd418)" result_is_array
Registering semantics for rule: <adverb list> ::= <adverb list items>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abd538)" result_is_array
Registering semantics for nulling symbol: adverb list
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abd538)" result_is_array
Registering semantics for rule: <adverb list items> ::= <adverb item>  *
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20abd658)" result_is_array
Registering semantics for nulling symbol: adverb list items
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20abd658)" result_is_array
Registering semantics for rule: alternative ::= rhs <adverb list>
  Semantics are push_start_location push_length push_one 0 push_one 1 bless "SCALAR(0x20abd778)" result_is_array
Registering semantics for rule: <alternative name> ::= <single quoted name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abd898)" result_is_array
Registering semantics for rule: <alternative name> ::= <standard name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abdad8)" result_is_array
Registering semantics for rule: alternatives ::= alternative  +
  Semantics are push_start_location push_length push_sequence bless "SCALAR(0x20abdf80)" result_is_array
Registering semantics for rule: blessing ::= [Lex-66] [Lex-67] <blessing name>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20abe0b8)" result_is_array
Registering semantics for rule: <blessing name> ::= <reserved blessing name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abe1f0)" result_is_array
Registering semantics for rule: <blessing name> ::= <standard name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abe328)" result_is_array
Registering semantics for rule: <completion event declaration> ::= [Lex-16] <event initialization> [Lex-17] [Lex-18] <symbol name>
  Semantics are push_start_location push_length push_one 1 push_one 4 bless "SCALAR(0x20abe418)" result_is_array
Registering semantics for rule: <default rule> ::= [Lex-7] <op declare bnf> <adverb list>
  Semantics are push_start_location push_length push_one 0 push_one 1 push_one 2 bless "SCALAR(0x20abe538)" result_is_array
Registering semantics for rule: <discard default statement> ::= [Lex-11] [Lex-12] [Lex-13] <adverb list>
  Semantics are push_start_location push_length push_one 3 bless "SCALAR(0x20abe658)" result_is_array
Registering semantics for rule: <discard rule> ::= [Lex-14] <op declare match> <single symbol> <adverb list>
  Semantics are push_start_location push_length push_one 2 push_one 3 bless "SCALAR(0x20abe778)" result_is_array
Registering semantics for rule: <empty rule> ::= lhs <op declare> <adverb list>
  Semantics are push_start_location push_length push_one 0 push_one 1 push_one 2 bless "SCALAR(0x20abe8b0)" result_is_array
Registering semantics for rule: <event initialization> ::= <event name> <event initializer>
  Semantics are push_start_location push_length push_one 0 push_one 1 bless "SCALAR(0x20abe940)" result_is_array
Registering semantics for rule: <event initializer> ::= /* empty */
  Semantics are push_start_location push_length bless "SCALAR(0x20abeb68)" result_is_array
Registering semantics for nulling symbol: event initializer
  Semantics are push_start_location push_length bless "SCALAR(0x20abeb68)" result_is_array
Registering semantics for rule: <event initializer> ::= [Lex-63] <on or off>
  Semantics are push_start_location push_length push_one 1 bless "SCALAR(0x20abeca0)" result_is_array
Registering semantics for rule: <event name> ::= <reserved event name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abed30)" result_is_array
Registering semantics for rule: <event name> ::= <single quoted name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abf2e8)" result_is_array
Registering semantics for rule: <event name> ::= <standard name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abf4c8)" result_is_array
Registering semantics for rule: <event specification> ::= [Lex-61] [Lex-62] <event initialization>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20abf5e8)" result_is_array
Registering semantics for rule: <group association> ::= [Lex-41] [Lex-42] [Lex-43]
  Semantics are push_start_location push_length bless "SCALAR(0x20abf708)" result_is_array
Registering semantics for rule: <inaccessible statement> ::= [Lex-25] [Lex-26] <inaccessible treatment> [Lex-27] [Lex-28]
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20abf828)" result_is_array
Registering semantics for rule: <inaccessible treatment> ::= [Lex-29]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abf948)" result_is_array
Registering semantics for rule: <inaccessible treatment> ::= [Lex-30]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abfa68)" result_is_array
Registering semantics for rule: <inaccessible treatment> ::= [Lex-31]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abfb58)" result_is_array
Registering semantics for rule: <left association> ::= [Lex-35] [Lex-36] [Lex-37]
  Semantics are push_start_location push_length bless "SCALAR(0x20abfc78)" result_is_array
Registering semantics for rule: <lexeme default statement> ::= [Lex-8] [Lex-9] [Lex-10] <adverb list>
  Semantics are push_start_location push_length push_one 3 bless "SCALAR(0x20abfd98)" result_is_array
Registering semantics for rule: <lexeme rule> ::= [Lex-15] <op declare match> symbol <adverb list>
  Semantics are push_start_location push_length push_one 2 push_one 3 bless "SCALAR(0x20abfeb8)" result_is_array
Registering semantics for rule: lhs ::= <symbol name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20abffd8)" result_is_array
Registering semantics for rule: naming ::= [Lex-68] [Lex-69] <alternative name>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20ac00c8)" result_is_array
Registering semantics for rule: <null adverb> ::= [Lex-32]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac0488)" result_is_array
Registering semantics for rule: <null ranking constant> ::= [Lex-55]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac05c0)" result_is_array
Registering semantics for rule: <null ranking constant> ::= [Lex-56]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac06f8)" result_is_array
Registering semantics for rule: <null ranking specification> ::= [Lex-50] [Lex-51] <null ranking constant>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20ac0818)" result_is_array
Registering semantics for rule: <null ranking specification> ::= [Lex-52] [Lex-53] [Lex-54] <null ranking constant>
  Semantics are push_start_location push_length push_one 3 bless "SCALAR(0x20ac0938)" result_is_array
Registering semantics for rule: <null statement> ::= [Lex-0]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac0a58)" result_is_array
Registering semantics for rule: <nulled event declaration> ::= [Lex-19] <event initialization> [Lex-20] [Lex-21] <symbol name>
  Semantics are push_start_location push_length push_one 1 push_one 4 bless "SCALAR(0x20ac0b78)" result_is_array
Registering semantics for rule: <on or off> ::= [Lex-64]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac0c98)" result_is_array
Registering semantics for rule: <on or off> ::= [Lex-65]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac0db8)" result_is_array
Registering semantics for rule: <op declare> ::= <op declare bnf>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac0ed8)" result_is_array
Registering semantics for rule: <op declare> ::= <op declare match>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac1010)" result_is_array
Registering semantics for rule: <parenthesized rhs primary list> ::= [Lex-70] <rhs primary list> [Lex-71]
  Semantics are push_start_location push_length push_one 1 bless "SCALAR(0x20ac1148)" result_is_array
Registering semantics for rule: <pause specification> ::= [Lex-59] [Lex-60] <before or after>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20ac1268)" result_is_array
Registering semantics for rule: <prediction event declaration> ::= [Lex-22] <event initialization> [Lex-23] [Lex-24] <symbol name>
  Semantics are push_start_location push_length push_one 1 push_one 4 bless "SCALAR(0x20ac1388)" result_is_array
Registering semantics for rule: priorities ::= alternatives  +
  Semantics are push_start_location push_length push_sequence bless "SCALAR(0x20ac2648)" result_is_array
Registering semantics for rule: <priority rule> ::= lhs <op declare> priorities
  Semantics are push_start_location push_length push_one 0 push_one 1 push_one 2 bless "SCALAR(0x20ac2768)" result_is_array
Registering semantics for rule: <priority specification> ::= [Lex-57] [Lex-58] <signed integer>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20ac2888)" result_is_array
Registering semantics for rule: <proper specification> ::= [Lex-46] [Lex-47] boolean
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20ac29f0)" result_is_array
Registering semantics for rule: <quantified rule> ::= lhs <op declare> <single symbol> quantifier <adverb list>
  Semantics are push_start_location push_length push_one 0 push_one 1 push_one 2 push_one 3 push_one 4 bless "SCALAR(0x20ac2ae0)" result_is_array
Registering semantics for rule: quantifier ::= [Lex-72]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac2b58)" result_is_array
Registering semantics for rule: quantifier ::= [Lex-73]
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac2d80)" result_is_array
Registering semantics for rule: <rank specification> ::= [Lex-48] [Lex-49] <signed integer>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20ac2ea0)" result_is_array
Registering semantics for rule: rhs ::= <rhs primary>  +
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac2f18)" result_is_array
Registering semantics for rule: <rhs primary> ::= <parenthesized rhs primary list>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac31a0)" result_is_array
Registering semantics for rule: <rhs primary> ::= <single quoted string>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac32c0)" result_is_array
Registering semantics for rule: <rhs primary> ::= <single symbol>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac33f8)" result_is_array
Registering semantics for rule: <rhs primary list> ::= <rhs primary>  +
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac34e8)" result_is_array
Registering semantics for rule: <right association> ::= [Lex-38] [Lex-39] [Lex-40]
  Semantics are push_start_location push_length bless "SCALAR(0x20ac38d8)" result_is_array
Registering semantics for rule: <separator specification> ::= [Lex-44] [Lex-45] <single symbol>
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20ac39f8)" result_is_array
Registering semantics for rule: <single symbol> ::= <character class>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac3b30)" result_is_array
Registering semantics for rule: <single symbol> ::= symbol
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac3c20)" result_is_array
Registering semantics for rule: <start rule> ::= [Lex-3] <op declare bnf> symbol
  Semantics are push_start_location push_length push_one 2 bless "SCALAR(0x20ac3d10)" result_is_array
Registering semantics for rule: <start rule> ::= [Lex-4] [Lex-5] [Lex-6] symbol
  Semantics are push_start_location push_length push_one 3 bless "SCALAR(0x20ac3e30)" result_is_array
Registering semantics for rule: statement ::= <completion event declaration>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac3f50)" result_is_array
Registering semantics for rule: statement ::= <default rule>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4070)" result_is_array
Registering semantics for rule: statement ::= <discard default statement>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4190)" result_is_array
Registering semantics for rule: statement ::= <discard rule>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac42b0)" result_is_array
Registering semantics for rule: statement ::= <empty rule>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac43d0)" result_is_array
Registering semantics for rule: statement ::= <inaccessible statement>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac44f0)" result_is_array
Registering semantics for rule: statement ::= <lexeme default statement>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4610)" result_is_array
Registering semantics for rule: statement ::= <lexeme rule>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4730)" result_is_array
Registering semantics for rule: statement ::= <null statement>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4b20)" result_is_array
Registering semantics for rule: statement ::= <nulled event declaration>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4c40)" result_is_array
Registering semantics for rule: statement ::= <prediction event declaration>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4d60)" result_is_array
Registering semantics for rule: statement ::= <priority rule>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4e80)" result_is_array
Registering semantics for rule: statement ::= <quantified rule>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac4fa0)" result_is_array
Registering semantics for rule: statement ::= <start rule>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac50c0)" result_is_array
Registering semantics for rule: statement ::= <statement group>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac51e0)" result_is_array
Registering semantics for rule: <statement group> ::= [Lex-1] statements [Lex-2]
  Semantics are push_start_location push_length push_one 1 push_one 2 bless "SCALAR(0x20ac5300)" result_is_array
Registering semantics for rule: statements ::= statement  +
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac5420)" result_is_array
Registering semantics for rule: symbol ::= <symbol name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac5540)" result_is_array
Registering semantics for rule: <symbol name> ::= <bare name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac5660)" result_is_array
Registering semantics for rule: <symbol name> ::= <bracketed name>
  Semantics are push_start_location push_length push_one 0 bless "SCALAR(0x20ac57c8)" result_is_array
Registering semantics for token: Perl name
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac58b8)" result_is_array
Registering semantics for token: array descriptor
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac59d8)" result_is_array
Registering semantics for token: bare name
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac5e78)" result_is_array
Registering semantics for token: before or after
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac5fb0)" result_is_array
Registering semantics for token: boolean
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac60b8)" result_is_array
Registering semantics for token: bracketed name
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac61c0)" result_is_array
Registering semantics for token: character class
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac62c8)" result_is_array
Registering semantics for token: op declare bnf
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac63d0)" result_is_array
Registering semantics for token: op declare match
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac64d8)" result_is_array
Registering semantics for token: reserved action name
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac65e0)" result_is_array
Registering semantics for token: reserved blessing name
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac66e8)" result_is_array
Registering semantics for token: reserved event name
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac67f0)" result_is_array
Registering semantics for token: signed integer
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac68f8)" result_is_array
Registering semantics for token: single quoted name
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac6a00)" result_is_array
Registering semantics for token: single quoted string
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac6b08)" result_is_array
Registering semantics for token: standard name
  Semantics are push_start_location push_length push_values bless "SCALAR(0x20ac6c10)" result_is_array
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
New Virtual Rule: R87:1@2-3C91@2, rule: 87: rhs[Seq] -> rhs primary
Real symbol count is 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Head of Virtual Rule: R86:1@2-3C87@2, rule: 86: rhs -> rhs[Seq]
Incrementing virtual rule by 0 symbols
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R21:1@3-6C5@3, rule: 21: adverb list items[Seq] -> adverb item
Real symbol count is 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R20:1@3-6C21@3, rule: 20: adverb list items -> adverb list items[Seq]
Incrementing virtual rule by 0 symbols
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R28:1@2-6C23@2, rule: 28: alternatives[Seq] -> alternative
Real symbol count is 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R27:1@2-6C28@2, rule: 27: alternatives -> alternatives[Seq]
Incrementing virtual rule by 0 symbols
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R76:1@2-6C27@2, rule: 76: priorities[Seq] -> alternatives
Real symbol count is 1
Stack position   4:
 \'=>'
Stack position   3:
 \'action'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R87:1@7-8C91@7, rule: 87: rhs[Seq] -> rhs primary
Real symbol count is 1
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R88:2@7-9C90@8, rule: 88: rhs[Seq] -> rhs[Seq] rhs primary
Adding 1
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R88:2@7-10C91@9, rule: 88: rhs[Seq] -> rhs[Seq] rhs primary
Adding 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R86:1@7-10C88@7, rule: 86: rhs -> rhs[Seq]
Incrementing virtual rule by 0 symbols
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R21:1@10-13C5@10, rule: 21: adverb list items[Seq] -> adverb item
Real symbol count is 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R20:1@10-13C21@10, rule: 20: adverb list items -> adverb list items[Seq]
Incrementing virtual rule by 0 symbols
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R28:1@7-13C23@7, rule: 28: alternatives[Seq] -> alternative
Real symbol count is 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R27:1@7-13C28@7, rule: 27: alternatives -> alternatives[Seq]
Incrementing virtual rule by 0 symbols
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R77:3@2-13C27@7, rule: 77: priorities[Seq] -> priorities[Seq] op loosen alternatives
Adding 2
Stack position   6:
 \'=>'
Stack position   5:
 \'action'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R87:1@14-15C91@14, rule: 87: rhs[Seq] -> rhs primary
Real symbol count is 1
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R88:2@14-16C90@15, rule: 88: rhs[Seq] -> rhs[Seq] rhs primary
Adding 1
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R88:2@14-17C91@16, rule: 88: rhs[Seq] -> rhs[Seq] rhs primary
Adding 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R86:1@14-17C88@14, rule: 86: rhs -> rhs[Seq]
Incrementing virtual rule by 0 symbols
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R21:1@17-20C5@17, rule: 21: adverb list items[Seq] -> adverb item
Real symbol count is 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R20:1@17-20C21@17, rule: 20: adverb list items -> adverb list items[Seq]
Incrementing virtual rule by 0 symbols
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R28:1@14-20C23@14, rule: 28: alternatives[Seq] -> alternative
Real symbol count is 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R27:1@14-20C28@14, rule: 27: alternatives -> alternatives[Seq]
Incrementing virtual rule by 0 symbols
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R77:3@2-20C27@14, rule: 77: priorities[Seq] -> priorities[Seq] op loosen alternatives
Adding 2
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R75:1@2-20C77@2, rule: 75: priorities -> priorities[Seq]
Incrementing virtual rule by 0 symbols
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R118:1@0-20C112@0, rule: 118: statements[Seq] -> statement
Real symbol count is 1
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'=>'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_NULLING_SYMBOL push_start_location
value event: starting op MARPA_STEP_NULLING_SYMBOL alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R119:2@0-24C113@20, rule: 119: statements[Seq] -> statements[Seq] statement
Adding 1
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \undef
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_NULLING_SYMBOL push_start_location
value event: starting op MARPA_STEP_NULLING_SYMBOL alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R119:2@0-27C104@24, rule: 119: statements[Seq] -> statements[Seq] statement
Adding 1
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN push_start_location
value event: starting op MARPA_STEP_TOKEN alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'=>'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_TOKEN result_is_token_value
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_NULLING_SYMBOL push_start_location
value event: starting op MARPA_STEP_NULLING_SYMBOL alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Virtual Rule: R119:2@0-31C113@27, rule: 119: statements[Seq] -> statements[Seq] statement
Adding 1
value event: starting op MARPA_STEP_RULE push_start_location
value event: starting op MARPA_STEP_RULE alternative
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Stack position   8:
 \'=>'
Stack position   7:
 \'action'
Stack position   6:
 \'+'
Stack position   5:
 \'||'
Stack position   4:
 \'+'
Stack position   3:
 \'||'
Stack position   2:
 \':discard'
Stack position   1:
 \undef
Stack position   0:
 \undef
Head of Virtual Rule: R117:1@0-31C119@0, rule: 117: statements -> statements[Seq]
Incrementing virtual rule by 0 symbols
value event: starting op MARPA_STEP_RULE result_is_rhs_n
Stack position   0:
 \undef
Stack position   0:
 \undef
Stack position   0:
 \undef
New Virtual Rule: R123:1@0-31C0@0, rule: 123: [:start]['] -> [:start]
Real symbol count is 1
Stack position   0:
 \undef
$VAR1 = undef;
Can't use an undefined value as an ARRAY reference at /home/Ruslan/Marpa--R3/cpan/blib/lib/Marpa/R3/MetaAST.pm line 76.
# Looks like you planned 30 tests but ran 17.
# Looks like your test exited with 255 just after 17.
t/01-lua.t .. 
Dubious, test returned 255 (wstat 65280, 0xff00)
Failed 13/30 subtests 

Test Summary Report
-------------------
t/01-lua.t (Wstat: 65280 Tests: 17 Failed: 0)
  Non-zero exit status: 255
  Parse errors: Bad plan.  You planned 30 tests but ran 17.
Files=1, Tests=17,  1 wallclock secs ( 0.05 usr  0.00 sys +  0.37 cusr  0.08 csys =  0.50 CPU)
Result: FAIL
Failed 1/1 test programs. 0/17 subtests failed.
Makefile:1076: recipe for target 'test_dynamic' failed
make[1]: *** [test_dynamic] Error 255
make[1]: Leaving directory '/home/Ruslan/Marpa--R3/cpan'

Tool completed successfully
